// Code generated by protoc-gen-go.
// source: OSMsg.proto
// DO NOT EDIT!

package OSMsg2

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type MsgType int32

const (
	MsgType_Logup      MsgType = 0
	MsgType_Login      MsgType = 1
	MsgType_Logout     MsgType = 2
	MsgType_Individual MsgType = 3
	MsgType_Group      MsgType = 4
)

var MsgType_name = map[int32]string{
	0: "Logup",
	1: "Login",
	2: "Logout",
	3: "Individual",
	4: "Group",
}
var MsgType_value = map[string]int32{
	"Logup":      0,
	"Login":      1,
	"Logout":     2,
	"Individual": 3,
	"Group":      4,
}

func (x MsgType) Enum() *MsgType {
	p := new(MsgType)
	*p = x
	return p
}
func (x MsgType) String() string {
	return proto.EnumName(MsgType_name, int32(x))
}
func (x MsgType) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *MsgType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MsgType_value, data, "MsgType")
	if err != nil {
		return err
	}
	*x = MsgType(value)
	return nil
}

type OSMsg struct {
	Pattern          *MsgType `protobuf:"varint,1,req,name=pattern,enum=MsgType,def=3" json:"pattern,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *OSMsg) Reset()         { *m = OSMsg{} }
func (m *OSMsg) String() string { return proto.CompactTextString(m) }
func (*OSMsg) ProtoMessage()    {}

const Default_OSMsg_Pattern MsgType = MsgType_Individual

func (m *OSMsg) GetPattern() MsgType {
	if m != nil && m.Pattern != nil {
		return *m.Pattern
	}
	return Default_OSMsg_Pattern
}

type IndMsg struct {
	Pattern          *MsgType `protobuf:"varint,1,req,name=pattern,enum=MsgType,def=3" json:"pattern,omitempty"`
	From             *int32   `protobuf:"varint,2,req,name=from" json:"from,omitempty"`
	To               *int32   `protobuf:"varint,3,req,name=to" json:"to,omitempty"`
	Msg              *string  `protobuf:"bytes,4,req,name=msg" json:"msg,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *IndMsg) Reset()         { *m = IndMsg{} }
func (m *IndMsg) String() string { return proto.CompactTextString(m) }
func (*IndMsg) ProtoMessage()    {}

const Default_IndMsg_Pattern MsgType = MsgType_Individual

func (m *IndMsg) GetPattern() MsgType {
	if m != nil && m.Pattern != nil {
		return *m.Pattern
	}
	return Default_IndMsg_Pattern
}

func (m *IndMsg) GetFrom() int32 {
	if m != nil && m.From != nil {
		return *m.From
	}
	return 0
}

func (m *IndMsg) GetTo() int32 {
	if m != nil && m.To != nil {
		return *m.To
	}
	return 0
}

func (m *IndMsg) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type LogupMsg struct {
	Pattern          *MsgType `protobuf:"varint,1,req,name=pattern,enum=MsgType,def=3" json:"pattern,omitempty"`
	From             *int32   `protobuf:"varint,2,req,name=from" json:"from,omitempty"`
	To               *int32   `protobuf:"varint,3,req,name=to" json:"to,omitempty"`
	Msg              *string  `protobuf:"bytes,4,req,name=msg" json:"msg,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *LogupMsg) Reset()         { *m = LogupMsg{} }
func (m *LogupMsg) String() string { return proto.CompactTextString(m) }
func (*LogupMsg) ProtoMessage()    {}

const Default_LogupMsg_Pattern MsgType = MsgType_Individual

func (m *LogupMsg) GetPattern() MsgType {
	if m != nil && m.Pattern != nil {
		return *m.Pattern
	}
	return Default_LogupMsg_Pattern
}

func (m *LogupMsg) GetFrom() int32 {
	if m != nil && m.From != nil {
		return *m.From
	}
	return 0
}

func (m *LogupMsg) GetTo() int32 {
	if m != nil && m.To != nil {
		return *m.To
	}
	return 0
}

func (m *LogupMsg) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type LoginMsg struct {
	Pattern          *MsgType `protobuf:"varint,1,req,name=pattern,enum=MsgType,def=3" json:"pattern,omitempty"`
	From             *int32   `protobuf:"varint,2,req,name=from" json:"from,omitempty"`
	To               *int32   `protobuf:"varint,3,req,name=to" json:"to,omitempty"`
	Msg              *string  `protobuf:"bytes,4,req,name=msg" json:"msg,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *LoginMsg) Reset()         { *m = LoginMsg{} }
func (m *LoginMsg) String() string { return proto.CompactTextString(m) }
func (*LoginMsg) ProtoMessage()    {}

const Default_LoginMsg_Pattern MsgType = MsgType_Individual

func (m *LoginMsg) GetPattern() MsgType {
	if m != nil && m.Pattern != nil {
		return *m.Pattern
	}
	return Default_LoginMsg_Pattern
}

func (m *LoginMsg) GetFrom() int32 {
	if m != nil && m.From != nil {
		return *m.From
	}
	return 0
}

func (m *LoginMsg) GetTo() int32 {
	if m != nil && m.To != nil {
		return *m.To
	}
	return 0
}

func (m *LoginMsg) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type LogoutMsg struct {
	Pattern          *MsgType `protobuf:"varint,1,req,name=pattern,enum=MsgType,def=3" json:"pattern,omitempty"`
	From             *int32   `protobuf:"varint,2,req,name=from" json:"from,omitempty"`
	To               *int32   `protobuf:"varint,3,req,name=to" json:"to,omitempty"`
	Msg              *string  `protobuf:"bytes,4,req,name=msg" json:"msg,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *LogoutMsg) Reset()         { *m = LogoutMsg{} }
func (m *LogoutMsg) String() string { return proto.CompactTextString(m) }
func (*LogoutMsg) ProtoMessage()    {}

const Default_LogoutMsg_Pattern MsgType = MsgType_Individual

func (m *LogoutMsg) GetPattern() MsgType {
	if m != nil && m.Pattern != nil {
		return *m.Pattern
	}
	return Default_LogoutMsg_Pattern
}

func (m *LogoutMsg) GetFrom() int32 {
	if m != nil && m.From != nil {
		return *m.From
	}
	return 0
}

func (m *LogoutMsg) GetTo() int32 {
	if m != nil && m.To != nil {
		return *m.To
	}
	return 0
}

func (m *LogoutMsg) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type GroupMsg struct {
	Pattern          *MsgType `protobuf:"varint,1,req,name=pattern,enum=MsgType,def=3" json:"pattern,omitempty"`
	From             *int32   `protobuf:"varint,2,req,name=from" json:"from,omitempty"`
	To               *int32   `protobuf:"varint,3,req,name=to" json:"to,omitempty"`
	Msg              *string  `protobuf:"bytes,4,req,name=msg" json:"msg,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *GroupMsg) Reset()         { *m = GroupMsg{} }
func (m *GroupMsg) String() string { return proto.CompactTextString(m) }
func (*GroupMsg) ProtoMessage()    {}

const Default_GroupMsg_Pattern MsgType = MsgType_Individual

func (m *GroupMsg) GetPattern() MsgType {
	if m != nil && m.Pattern != nil {
		return *m.Pattern
	}
	return Default_GroupMsg_Pattern
}

func (m *GroupMsg) GetFrom() int32 {
	if m != nil && m.From != nil {
		return *m.From
	}
	return 0
}

func (m *GroupMsg) GetTo() int32 {
	if m != nil && m.To != nil {
		return *m.To
	}
	return 0
}

func (m *GroupMsg) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func init() {
	proto.RegisterEnum("MsgType", MsgType_name, MsgType_value)
}
